app:
  scheduler:
    enable: true
    interval: 10s
    force-check-delay: 5s
  database-access-type: jpa
  retry:
    max-attempts: 3
    exceptions:
      - java.lang.RuntimeException
      - java.net.SocketException
    backoff:
      delay: 1000
      max-delay: 5000
      multiplier: 1

client:
  stackoverflow:
    base-url: https://api.stackexchange.com/2.3/
    access-token: ${STACKOVERFLOW_ACCESS_TOKEN:}
    key: ${STACKOVERFLOW_KEY:}
  github:
    token: ${TOKEN:}
    base-url: https://api.github.com/repos
  bot:
    base-url: http://localhost:8090/

springdoc:
  swagger-ui:
    path: /swagger-ui

spring:
  application:
    name: scrapper
  liquibase:
    enabled: false
  database:
    check-time-minutes: 0
    limit: 10
  datasource:
    url: jdbc:postgresql://localhost:15432/scrapper
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  cache:
    jcache:
      provider: com.github.benmanes.caffeine.jcache.spi.CaffeineCachingProvider
    caffeine:
      spec: maximumSize=10000,expireAfterAccess=3600s
    cache-names:
      - rate-limit-bucket

server:
  port: 8080

logging:
  config: classpath:log4j2-plain.xml

bucket4j:
  enabled: true
  filters:
    - cache-name: rate-limit-bucket
      url: .*
      http-status-code: too_many_requests
      rate-limits:
        - bandwidths:
            - capacity: 10
              time: 1
              unit: minutes
              refill-speed: interval
          cache-key: getRemoteAddr()
          skip-condition: '@bucket4jWhiteListService.isWhiteList(getRemoteAddr())'

clients-whitelist: 127.0.0.1

resilience4j:
  retry:
    instances:
      basic:
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2
        max-attempts: 5
        wait-duration: 1s
